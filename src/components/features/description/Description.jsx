import React from "react";
import ReactMarkdown from 'react-markdown';
import "./description.less";

const markdown = `
# Easy Mosh ― datamoshエフェクトを簡単に作成するツール
## Easy Mosh の概要
Easy Mosh は、従来の動画編集ソフトウェアでは高価なプラグインや高度な知識が必要とされる「datamosh」効果を、手軽に実現できるツールです。専門的な知識がなくても、シンプルなインターフェースを通じて、動画ファイルに独特なグリッチ効果を加えることが可能です。

## datamoshとは
datamoshとは、mpeg4形式で圧縮された動画ファイル内のフレームデータの順序を意図的に破壊することにより、グリッチノイズを生み出す編集技法です。圧縮アルゴリズムが生み出す偶発的なこのエフェクトは、デジタルの断片を強制的に結合し、dopeな視覚的体験を提供します。

## datamoshの基本原理
### MPEG4圧縮の仕組み
mpeg4形式の動画ファイルは、効率的な圧縮と再生のために、映像データを3種類のフレームとして保存しています。それぞれの役割は以下の通りです。

- Iフレーム (Intra-coded frame):
  - Iフレームは動画の中で完全な画像データを保持しているフレームです。画像全体の情報を独立して保持しており、他のフレームに依存しません。データ量は大きくなりますが、動画再生時の計算コストが低いため、映像の基準となるフレームとして利用されます。

- Pフレーム (Predicted frame):
  - Pフレームは前方にあるフレームを参照して、画面の差分情報だけをエンコードするフレームです。
  映像中の変化が少ない部分を効率的に表現し、圧縮率を向上させます。
  データ効率は高いですが参照フレームとの依存関係があるため、再生時は前のフレームの情報が必要です。

- Bフレーム (Bidirectional predicted frame):
  - Bフレームは、前後のフレームを参照して、双方向からの差分をエンコードするフレームです。
  2つのフレームを利用することで、最も効率的な圧縮が可能となり、データ量が大幅に削減できます。
  再生に複数のフレームを利用するため、計算コストが高くなりますが、圧縮率は最も高いです。

### エフェクトの発生メカニズム
datamoshエフェクトは、これらのフレーム構造を意図的に操作することで発生します。Easy Mosh には、以下の手法が実装されています。

- Iフレームの代替(I-substitute):
  - 映像の基準となるIフレームを削除することで、次に続くPフレームやBフレームが参照すべき正確な情報が失われ、結果として誤ったフレームに差分情報が適用されることになります。
- Pフレームの複製(P-duplicate):
  - Pフレームを意図的に複製することで、一瞬の動きが繰り返し行われ、結果として差分が増幅されることになります。

## Q & A
### Q: プレビューにグリッチノイズが表示されないが？
A: グリッチノイズはレンダリングしないと確認することができません。プレビューはあくまで参考程度にしてください。

### Q: タイムラインのアイテムはどうやって消すの？
A: タイムラインのアイテムを右クリックして削除を選択してください。

### Q: 対応している動画ファイル形式は？
A: 現在、mp4形式のみ対応しています。
`;

const Description = () => (
  <div className="description">
    <ReactMarkdown children={markdown} />
  </div>
)

export default Description;